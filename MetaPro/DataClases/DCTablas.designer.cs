#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MetaPro.DataClases
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="teamdinamita")]
	public partial class DCTablasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAmigo(Amigo instance);
    partial void UpdateAmigo(Amigo instance);
    partial void DeleteAmigo(Amigo instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertCriaturita(Criaturita instance);
    partial void UpdateCriaturita(Criaturita instance);
    partial void DeleteCriaturita(Criaturita instance);
    partial void InsertEstado(Estado instance);
    partial void UpdateEstado(Estado instance);
    partial void DeleteEstado(Estado instance);
    partial void InsertObjetivo(Objetivo instance);
    partial void UpdateObjetivo(Objetivo instance);
    partial void DeleteObjetivo(Objetivo instance);
    partial void InsertProgreso(Progreso instance);
    partial void UpdateProgreso(Progreso instance);
    partial void DeleteProgreso(Progreso instance);
    partial void InsertComentario(Comentario instance);
    partial void UpdateComentario(Comentario instance);
    partial void DeleteComentario(Comentario instance);
    #endregion
		
		public DCTablasDataContext() : 
				base(global::MetaPro.Properties.Settings.Default.teamdinamitaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DCTablasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCTablasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCTablasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCTablasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Amigo> Amigo
		{
			get
			{
				return this.GetTable<Amigo>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Categoria> Categoria
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<Criaturita> Criaturita
		{
			get
			{
				return this.GetTable<Criaturita>();
			}
		}
		
		public System.Data.Linq.Table<Estado> Estado
		{
			get
			{
				return this.GetTable<Estado>();
			}
		}
		
		public System.Data.Linq.Table<Objetivo> Objetivo
		{
			get
			{
				return this.GetTable<Objetivo>();
			}
		}
		
		public System.Data.Linq.Table<Progreso> Progreso
		{
			get
			{
				return this.GetTable<Progreso>();
			}
		}
		
		public System.Data.Linq.Table<Comentario> Comentario
		{
			get
			{
				return this.GetTable<Comentario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Amigo")]
	public partial class Amigo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAmigo;
		
		private int _IdUsuario;
		
		private int _IdAmigoUsuario;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<Usuario> _Usuario1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAmigoChanging(int value);
    partial void OnIdAmigoChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnIdAmigoUsuarioChanging(int value);
    partial void OnIdAmigoUsuarioChanged();
    #endregion
		
		public Amigo()
		{
			this._Usuario = default(EntityRef<Usuario>);
			this._Usuario1 = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAmigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAmigo
		{
			get
			{
				return this._IdAmigo;
			}
			set
			{
				if ((this._IdAmigo != value))
				{
					this.OnIdAmigoChanging(value);
					this.SendPropertyChanging();
					this._IdAmigo = value;
					this.SendPropertyChanged("IdAmigo");
					this.OnIdAmigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAmigoUsuario", DbType="Int NOT NULL")]
		public int IdAmigoUsuario
		{
			get
			{
				return this._IdAmigoUsuario;
			}
			set
			{
				if ((this._IdAmigoUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAmigoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdAmigoUsuario = value;
					this.SendPropertyChanged("IdAmigoUsuario");
					this.OnIdAmigoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Amigo", Storage="_Usuario", ThisKey="IdAmigoUsuario", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Amigo.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Amigo.Add(this);
						this._IdAmigoUsuario = value.IdUsuario;
					}
					else
					{
						this._IdAmigoUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Amigo1", Storage="_Usuario1", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuario Usuario1
		{
			get
			{
				return this._Usuario1.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario1.Entity;
				if (((previousValue != value) 
							|| (this._Usuario1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario1.Entity = null;
						previousValue.Amigo1.Remove(this);
					}
					this._Usuario1.Entity = value;
					if ((value != null))
					{
						value.Amigo1.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private string _Nickname;
		
		private string _Contraseña;
		
		private int _IdCriaturita;
		
		private System.Nullable<int> _IdEstado;
		
		private EntitySet<Amigo> _Amigo;
		
		private EntitySet<Amigo> _Amigo1;
		
		private EntitySet<Objetivo> _Objetivo;
		
		private EntitySet<Comentario> _Comentario;
		
		private EntityRef<Criaturita> _Criaturita;
		
		private EntityRef<Estado> _Estado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnNicknameChanging(string value);
    partial void OnNicknameChanged();
    partial void OnContraseñaChanging(string value);
    partial void OnContraseñaChanged();
    partial void OnIdCriaturitaChanging(int value);
    partial void OnIdCriaturitaChanged();
    partial void OnIdEstadoChanging(System.Nullable<int> value);
    partial void OnIdEstadoChanged();
    #endregion
		
		public Usuario()
		{
			this._Amigo = new EntitySet<Amigo>(new Action<Amigo>(this.attach_Amigo), new Action<Amigo>(this.detach_Amigo));
			this._Amigo1 = new EntitySet<Amigo>(new Action<Amigo>(this.attach_Amigo1), new Action<Amigo>(this.detach_Amigo1));
			this._Objetivo = new EntitySet<Objetivo>(new Action<Objetivo>(this.attach_Objetivo), new Action<Objetivo>(this.detach_Objetivo));
			this._Comentario = new EntitySet<Comentario>(new Action<Comentario>(this.attach_Comentario), new Action<Comentario>(this.detach_Comentario));
			this._Criaturita = default(EntityRef<Criaturita>);
			this._Estado = default(EntityRef<Estado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nickname", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nickname
		{
			get
			{
				return this._Nickname;
			}
			set
			{
				if ((this._Nickname != value))
				{
					this.OnNicknameChanging(value);
					this.SendPropertyChanging();
					this._Nickname = value;
					this.SendPropertyChanged("Nickname");
					this.OnNicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contraseña", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Contraseña
		{
			get
			{
				return this._Contraseña;
			}
			set
			{
				if ((this._Contraseña != value))
				{
					this.OnContraseñaChanging(value);
					this.SendPropertyChanging();
					this._Contraseña = value;
					this.SendPropertyChanged("Contraseña");
					this.OnContraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCriaturita", DbType="Int NOT NULL")]
		public int IdCriaturita
		{
			get
			{
				return this._IdCriaturita;
			}
			set
			{
				if ((this._IdCriaturita != value))
				{
					if (this._Criaturita.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCriaturitaChanging(value);
					this.SendPropertyChanging();
					this._IdCriaturita = value;
					this.SendPropertyChanged("IdCriaturita");
					this.OnIdCriaturitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstado", DbType="Int")]
		public System.Nullable<int> IdEstado
		{
			get
			{
				return this._IdEstado;
			}
			set
			{
				if ((this._IdEstado != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEstadoChanging(value);
					this.SendPropertyChanging();
					this._IdEstado = value;
					this.SendPropertyChanged("IdEstado");
					this.OnIdEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Amigo", Storage="_Amigo", ThisKey="IdUsuario", OtherKey="IdAmigoUsuario")]
		public EntitySet<Amigo> Amigo
		{
			get
			{
				return this._Amigo;
			}
			set
			{
				this._Amigo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Amigo1", Storage="_Amigo1", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<Amigo> Amigo1
		{
			get
			{
				return this._Amigo1;
			}
			set
			{
				this._Amigo1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Objetivo", Storage="_Objetivo", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<Objetivo> Objetivo
		{
			get
			{
				return this._Objetivo;
			}
			set
			{
				this._Objetivo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Comentario", Storage="_Comentario", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<Comentario> Comentario
		{
			get
			{
				return this._Comentario;
			}
			set
			{
				this._Comentario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criaturita_Usuario", Storage="_Criaturita", ThisKey="IdCriaturita", OtherKey="IdCriaturita", IsForeignKey=true)]
		public Criaturita Criaturita
		{
			get
			{
				return this._Criaturita.Entity;
			}
			set
			{
				Criaturita previousValue = this._Criaturita.Entity;
				if (((previousValue != value) 
							|| (this._Criaturita.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Criaturita.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Criaturita.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdCriaturita = value.IdCriaturita;
					}
					else
					{
						this._IdCriaturita = default(int);
					}
					this.SendPropertyChanged("Criaturita");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Usuario", Storage="_Estado", ThisKey="IdEstado", OtherKey="IdEstado", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdEstado = value.IdEstado;
					}
					else
					{
						this._IdEstado = default(Nullable<int>);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Amigo(Amigo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Amigo(Amigo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Amigo1(Amigo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario1 = this;
		}
		
		private void detach_Amigo1(Amigo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario1 = null;
		}
		
		private void attach_Objetivo(Objetivo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Objetivo(Objetivo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Comentario(Comentario entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Comentario(Comentario entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCategoria;
		
		private string _Dificultad;
		
		private EntitySet<Objetivo> _Objetivo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCategoriaChanging(int value);
    partial void OnIdCategoriaChanged();
    partial void OnDificultadChanging(string value);
    partial void OnDificultadChanged();
    #endregion
		
		public Categoria()
		{
			this._Objetivo = new EntitySet<Objetivo>(new Action<Objetivo>(this.attach_Objetivo), new Action<Objetivo>(this.detach_Objetivo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dificultad", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Dificultad
		{
			get
			{
				return this._Dificultad;
			}
			set
			{
				if ((this._Dificultad != value))
				{
					this.OnDificultadChanging(value);
					this.SendPropertyChanging();
					this._Dificultad = value;
					this.SendPropertyChanged("Dificultad");
					this.OnDificultadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Objetivo", Storage="_Objetivo", ThisKey="IdCategoria", OtherKey="IdCategoria")]
		public EntitySet<Objetivo> Objetivo
		{
			get
			{
				return this._Objetivo;
			}
			set
			{
				this._Objetivo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Objetivo(Objetivo entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Objetivo(Objetivo entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Criaturita")]
	public partial class Criaturita : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCriaturita;
		
		private string _Nombre;
		
		private string _Email;
		
		private string _Celular;
		
		private string _Pais;
		
		private string _Ciudad;
		
		private string _Sexo;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCriaturitaChanging(int value);
    partial void OnIdCriaturitaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCelularChanging(string value);
    partial void OnCelularChanged();
    partial void OnPaisChanging(string value);
    partial void OnPaisChanged();
    partial void OnCiudadChanging(string value);
    partial void OnCiudadChanged();
    partial void OnSexoChanging(string value);
    partial void OnSexoChanged();
    #endregion
		
		public Criaturita()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCriaturita", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCriaturita
		{
			get
			{
				return this._IdCriaturita;
			}
			set
			{
				if ((this._IdCriaturita != value))
				{
					this.OnIdCriaturitaChanging(value);
					this.SendPropertyChanging();
					this._IdCriaturita = value;
					this.SendPropertyChanged("IdCriaturita");
					this.OnIdCriaturitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pais", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Pais
		{
			get
			{
				return this._Pais;
			}
			set
			{
				if ((this._Pais != value))
				{
					this.OnPaisChanging(value);
					this.SendPropertyChanging();
					this._Pais = value;
					this.SendPropertyChanged("Pais");
					this.OnPaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ciudad", DbType="VarChar(50)")]
		public string Ciudad
		{
			get
			{
				return this._Ciudad;
			}
			set
			{
				if ((this._Ciudad != value))
				{
					this.OnCiudadChanging(value);
					this.SendPropertyChanging();
					this._Ciudad = value;
					this.SendPropertyChanged("Ciudad");
					this.OnCiudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criaturita_Usuario", Storage="_Usuario", ThisKey="IdCriaturita", OtherKey="IdCriaturita")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Criaturita = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Criaturita = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado")]
	public partial class Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEstado;
		
		private string _Conexion;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEstadoChanging(int value);
    partial void OnIdEstadoChanged();
    partial void OnConexionChanging(string value);
    partial void OnConexionChanged();
    #endregion
		
		public Estado()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEstado
		{
			get
			{
				return this._IdEstado;
			}
			set
			{
				if ((this._IdEstado != value))
				{
					this.OnIdEstadoChanging(value);
					this.SendPropertyChanging();
					this._IdEstado = value;
					this.SendPropertyChanged("IdEstado");
					this.OnIdEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conexion", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Conexion
		{
			get
			{
				return this._Conexion;
			}
			set
			{
				if ((this._Conexion != value))
				{
					this.OnConexionChanging(value);
					this.SendPropertyChanging();
					this._Conexion = value;
					this.SendPropertyChanged("Conexion");
					this.OnConexionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Usuario", Storage="_Usuario", ThisKey="IdEstado", OtherKey="IdEstado")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Objetivo")]
	public partial class Objetivo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdObjetivo;
		
		private string _Titulo;
		
		private string _Descripcion;
		
		private int _Tiempo;
		
		private System.DateTime _FechaC;
		
		private int _Avance;
		
		private int _IdUsuario;
		
		private System.Nullable<int> _IdCategoria;
		
		private EntitySet<Progreso> _Progreso;
		
		private EntitySet<Comentario> _Comentario;
		
		private EntityRef<Categoria> _Categoria;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdObjetivoChanging(int value);
    partial void OnIdObjetivoChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnTiempoChanging(int value);
    partial void OnTiempoChanged();
    partial void OnFechaCChanging(System.DateTime value);
    partial void OnFechaCChanged();
    partial void OnAvanceChanging(int value);
    partial void OnAvanceChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnIdCategoriaChanging(System.Nullable<int> value);
    partial void OnIdCategoriaChanged();
    #endregion
		
		public Objetivo()
		{
			this._Progreso = new EntitySet<Progreso>(new Action<Progreso>(this.attach_Progreso), new Action<Progreso>(this.detach_Progreso));
			this._Comentario = new EntitySet<Comentario>(new Action<Comentario>(this.attach_Comentario), new Action<Comentario>(this.detach_Comentario));
			this._Categoria = default(EntityRef<Categoria>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdObjetivo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdObjetivo
		{
			get
			{
				return this._IdObjetivo;
			}
			set
			{
				if ((this._IdObjetivo != value))
				{
					this.OnIdObjetivoChanging(value);
					this.SendPropertyChanging();
					this._IdObjetivo = value;
					this.SendPropertyChanged("IdObjetivo");
					this.OnIdObjetivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tiempo", DbType="Int NOT NULL")]
		public int Tiempo
		{
			get
			{
				return this._Tiempo;
			}
			set
			{
				if ((this._Tiempo != value))
				{
					this.OnTiempoChanging(value);
					this.SendPropertyChanging();
					this._Tiempo = value;
					this.SendPropertyChanged("Tiempo");
					this.OnTiempoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaC", DbType="Date NOT NULL")]
		public System.DateTime FechaC
		{
			get
			{
				return this._FechaC;
			}
			set
			{
				if ((this._FechaC != value))
				{
					this.OnFechaCChanging(value);
					this.SendPropertyChanging();
					this._FechaC = value;
					this.SendPropertyChanged("FechaC");
					this.OnFechaCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avance", DbType="Int NOT NULL")]
		public int Avance
		{
			get
			{
				return this._Avance;
			}
			set
			{
				if ((this._Avance != value))
				{
					this.OnAvanceChanging(value);
					this.SendPropertyChanging();
					this._Avance = value;
					this.SendPropertyChanged("Avance");
					this.OnAvanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", DbType="Int")]
		public System.Nullable<int> IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Objetivo_Progreso", Storage="_Progreso", ThisKey="IdObjetivo", OtherKey="IdObjetivo")]
		public EntitySet<Progreso> Progreso
		{
			get
			{
				return this._Progreso;
			}
			set
			{
				this._Progreso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Objetivo_Comentario", Storage="_Comentario", ThisKey="IdObjetivo", OtherKey="IdObjetivo")]
		public EntitySet<Comentario> Comentario
		{
			get
			{
				return this._Comentario;
			}
			set
			{
				this._Comentario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Objetivo", Storage="_Categoria", ThisKey="IdCategoria", OtherKey="IdCategoria", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Objetivo.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Objetivo.Add(this);
						this._IdCategoria = value.IdCategoria;
					}
					else
					{
						this._IdCategoria = default(Nullable<int>);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Objetivo", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Objetivo.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Objetivo.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Progreso(Progreso entity)
		{
			this.SendPropertyChanging();
			entity.Objetivo = this;
		}
		
		private void detach_Progreso(Progreso entity)
		{
			this.SendPropertyChanging();
			entity.Objetivo = null;
		}
		
		private void attach_Comentario(Comentario entity)
		{
			this.SendPropertyChanging();
			entity.Objetivo = this;
		}
		
		private void detach_Comentario(Comentario entity)
		{
			this.SendPropertyChanging();
			entity.Objetivo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Progreso")]
	public partial class Progreso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProgreso;
		
		private int _IdObjetivo;
		
		private int _Avance;
		
		private System.DateTime _DiaProgreso;
		
		private EntityRef<Objetivo> _Objetivo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProgresoChanging(int value);
    partial void OnIdProgresoChanged();
    partial void OnIdObjetivoChanging(int value);
    partial void OnIdObjetivoChanged();
    partial void OnAvanceChanging(int value);
    partial void OnAvanceChanged();
    partial void OnDiaProgresoChanging(System.DateTime value);
    partial void OnDiaProgresoChanged();
    #endregion
		
		public Progreso()
		{
			this._Objetivo = default(EntityRef<Objetivo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProgreso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProgreso
		{
			get
			{
				return this._IdProgreso;
			}
			set
			{
				if ((this._IdProgreso != value))
				{
					this.OnIdProgresoChanging(value);
					this.SendPropertyChanging();
					this._IdProgreso = value;
					this.SendPropertyChanged("IdProgreso");
					this.OnIdProgresoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdObjetivo", DbType="Int NOT NULL")]
		public int IdObjetivo
		{
			get
			{
				return this._IdObjetivo;
			}
			set
			{
				if ((this._IdObjetivo != value))
				{
					if (this._Objetivo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdObjetivoChanging(value);
					this.SendPropertyChanging();
					this._IdObjetivo = value;
					this.SendPropertyChanged("IdObjetivo");
					this.OnIdObjetivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avance", DbType="Int NOT NULL")]
		public int Avance
		{
			get
			{
				return this._Avance;
			}
			set
			{
				if ((this._Avance != value))
				{
					this.OnAvanceChanging(value);
					this.SendPropertyChanging();
					this._Avance = value;
					this.SendPropertyChanged("Avance");
					this.OnAvanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaProgreso", DbType="Date NOT NULL")]
		public System.DateTime DiaProgreso
		{
			get
			{
				return this._DiaProgreso;
			}
			set
			{
				if ((this._DiaProgreso != value))
				{
					this.OnDiaProgresoChanging(value);
					this.SendPropertyChanging();
					this._DiaProgreso = value;
					this.SendPropertyChanged("DiaProgreso");
					this.OnDiaProgresoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Objetivo_Progreso", Storage="_Objetivo", ThisKey="IdObjetivo", OtherKey="IdObjetivo", IsForeignKey=true)]
		public Objetivo Objetivo
		{
			get
			{
				return this._Objetivo.Entity;
			}
			set
			{
				Objetivo previousValue = this._Objetivo.Entity;
				if (((previousValue != value) 
							|| (this._Objetivo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Objetivo.Entity = null;
						previousValue.Progreso.Remove(this);
					}
					this._Objetivo.Entity = value;
					if ((value != null))
					{
						value.Progreso.Add(this);
						this._IdObjetivo = value.IdObjetivo;
					}
					else
					{
						this._IdObjetivo = default(int);
					}
					this.SendPropertyChanged("Objetivo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comentario")]
	public partial class Comentario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdComentario;
		
		private string _Contenido;
		
		private System.DateTime _DiaPubli;
		
		private int _IdUsuario;
		
		private int _IdObjetivo;
		
		private EntityRef<Objetivo> _Objetivo;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdComentarioChanging(int value);
    partial void OnIdComentarioChanged();
    partial void OnContenidoChanging(string value);
    partial void OnContenidoChanged();
    partial void OnDiaPubliChanging(System.DateTime value);
    partial void OnDiaPubliChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnIdObjetivoChanging(int value);
    partial void OnIdObjetivoChanged();
    #endregion
		
		public Comentario()
		{
			this._Objetivo = default(EntityRef<Objetivo>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdComentario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdComentario
		{
			get
			{
				return this._IdComentario;
			}
			set
			{
				if ((this._IdComentario != value))
				{
					this.OnIdComentarioChanging(value);
					this.SendPropertyChanging();
					this._IdComentario = value;
					this.SendPropertyChanged("IdComentario");
					this.OnIdComentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contenido", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Contenido
		{
			get
			{
				return this._Contenido;
			}
			set
			{
				if ((this._Contenido != value))
				{
					this.OnContenidoChanging(value);
					this.SendPropertyChanging();
					this._Contenido = value;
					this.SendPropertyChanged("Contenido");
					this.OnContenidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaPubli", DbType="Date NOT NULL")]
		public System.DateTime DiaPubli
		{
			get
			{
				return this._DiaPubli;
			}
			set
			{
				if ((this._DiaPubli != value))
				{
					this.OnDiaPubliChanging(value);
					this.SendPropertyChanging();
					this._DiaPubli = value;
					this.SendPropertyChanged("DiaPubli");
					this.OnDiaPubliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdObjetivo", DbType="Int NOT NULL")]
		public int IdObjetivo
		{
			get
			{
				return this._IdObjetivo;
			}
			set
			{
				if ((this._IdObjetivo != value))
				{
					if (this._Objetivo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdObjetivoChanging(value);
					this.SendPropertyChanging();
					this._IdObjetivo = value;
					this.SendPropertyChanged("IdObjetivo");
					this.OnIdObjetivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Objetivo_Comentario", Storage="_Objetivo", ThisKey="IdObjetivo", OtherKey="IdObjetivo", IsForeignKey=true)]
		public Objetivo Objetivo
		{
			get
			{
				return this._Objetivo.Entity;
			}
			set
			{
				Objetivo previousValue = this._Objetivo.Entity;
				if (((previousValue != value) 
							|| (this._Objetivo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Objetivo.Entity = null;
						previousValue.Comentario.Remove(this);
					}
					this._Objetivo.Entity = value;
					if ((value != null))
					{
						value.Comentario.Add(this);
						this._IdObjetivo = value.IdObjetivo;
					}
					else
					{
						this._IdObjetivo = default(int);
					}
					this.SendPropertyChanged("Objetivo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Comentario", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Comentario.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Comentario.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
